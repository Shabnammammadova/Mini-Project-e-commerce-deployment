// prisma/schema.prisma
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  // uncomment next line if you use Prisma <5.10
  // directUrl = env("DATABASE_URL_UNPOOLED")
}

generator client {
  provider = "prisma-client-js"
}
enum Role {
  USER
  ADMIN
}

model User {
  id         String   @id @default(cuid())
  externalId String   @unique
  email      String   @unique
  firstName   String?
  lastName   String?
  imageUrl    String?
  role       Role     @default(USER)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  cart       Cart?
  favorite   Favorite?
}

model Product {
  id        String   @id @default(cuid())
  name      String
  price     Float
  inStock   Boolean  @default(true)
  imageUrl  String
  updatedAt DateTime @updatedAt
  createdAt DateTime @default(now())
  category    Category @relation(fields: [categoryId],references: [id])
  categoryId  String
  cartItems CartItem[]
  favoriteItems  FavoriteItem[]
}

model Category{
  id    String  @id @default(cuid())
  name  String
  products Product[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model CartItem {
  id        String  @id @default(cuid())
  product   Product @relation(fields: [productId], references: [id])
  productId String
  quantity  Int
  cart      Cart    @relation(fields: [cartId], references: [id])
  cartId    String
}

model Cart {
  id     String @id @default(cuid())
  user   User   @relation(fields: [userId], references: [id])
  userId String @unique
  items CartItem[]
}


model Favorite{
  id     String @id @default(cuid())
  user   User   @relation(fields: [userId], references: [id])
  userId String @unique
  items  FavoriteItem[]
}

model FavoriteItem {
  id        String  @id @default(cuid())
  product   Product @relation(fields: [productId], references: [id])
  productId String
  quantity  Int
  favorite     Favorite    @relation(fields: [favoriteId], references: [id])
  favoriteId    String
}
